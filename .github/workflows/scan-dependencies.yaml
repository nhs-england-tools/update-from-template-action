name: "Scan Dependencies"

on:
  workflow_call:
    inputs:
      build_datetime:
        description: "Build datetime, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_timestamp:
        description: "Build timestamp, set by the CI/CD pipeline workflow"
        required: true
        type: string

jobs:
  scan-dependencies:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3
      - name: "Generate SBOM"
        run: BUILD_DATETIME=${{ inputs.build_datetime }} ./scripts/reports/generate-sbom.sh
      - name: "Compress SBOM report"
        run: zip sbom-report.json.zip sbom-report.json
      - name: "Upload SBOM report as an artefact"
        uses: actions/upload-artifact@v3
        with:
          name: sbom-report.json.zip
          path: ./sbom-report.json.zip
      - name: "Scan vulnerabilities"
        run: BUILD_DATETIME=${{ inputs.build_datetime }} ./scripts/reports/scan-vulnerabilities.sh
      - name: "Compress vulnerabilities report"
        run: zip vulnerabilities-report.json.zip vulnerabilities-report.json
      - name: "Upload vulnerabilities report as an artefact"
        uses: actions/upload-artifact@v3
        with:
          name: vulnerabilities-report.json.zip
          path: ./vulnerabilities-report.json.zip
      - name: "Check prerequisites for sending the reports"
        id: check
        run: echo "secrets_exist=${{ secrets.IDP_AWS_REPORT_UPLOAD_ROLE_NAME != '' && secrets.IDP_AWS_REPORT_UPLOAD_BUCKET_ENDPOINT != '' }}" >> $GITHUB_OUTPUT
      - name: "Authenticate to send the reports"
        if: steps.check.outputs.secrets_exist == 'true'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.IDP_AWS_REPORT_UPLOAD_ACCOUNT_ID }}:role/${{ secrets.IDP_AWS_REPORT_UPLOAD_ROLE_NAME }}
          aws-region: ${{ secrets.IDP_AWS_REPORT_UPLOAD_REGION }}
      - name: "Send the SBOM and vulnerabilities reports to the central location"
        if: steps.check.outputs.secrets_exist == 'true'
        run: |
          aws s3 cp ./sbom-report.json.zip ${{ secrets.IDP_AWS_REPORT_UPLOAD_BUCKET_ENDPOINT }}/${{ inputs.build_timestamp }}-sbom-report.json.zip
          aws s3 cp ./vulnerabilities-report.json.zip ${{ secrets.IDP_AWS_REPORT_UPLOAD_BUCKET_ENDPOINT }}/${{ inputs.build_timestamp }}-vulnerabilities-report.json.zip
